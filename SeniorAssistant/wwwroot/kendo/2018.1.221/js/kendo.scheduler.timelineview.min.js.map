{"version":3,"sources":["kendo.scheduler.timelineview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","push","setColspan","columnLevel","i","count","columns","length","colspan","collidingEvents","elements","left","right","idx","startPosition","overlaps","endPosition","rectLeft","rectRight","eventsForSlot","event","events","TimelineView","kendo","window","ui","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","proxy","getDate","MS_PER_DAY","MS_PER_MINUTE","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","SCHEDULER_HEADER_WRAP_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_STRING","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","group","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","resources","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","start","end","slotTemplate","isVerticalGrouped","rowIdx","groupIdx","html","appendRow","tmplDate","content","classes","_resourceBySlot","isToday","workDayStart","workDayEnd","_isWorkDay","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","rowMultiplier","time","rowIndex","cellMultiplier","cells","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","cellIndex","floor","children","startTime","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","adjustedEvent","range","container","eventObject","element","_createEventElement","occurrence","head","tail","appendTo","css","top","height","eventHeight","_startTime","_endTime","uid","slotRange","offsetTop","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","round","innerRect","getTime","timesTableMarker","prependTo","addClass","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","collection","_collection","last","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","rect","hint","snap","offsetHeight","_appendMoveHint","_isRtl","scrollWidth","offsetWidth","TimelineGroupedByDateView","times","eq","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msMajorInterval","majorTick","msInterval","_dates","startIndex","endIndex","currentSlot","dateRange","eventObjects","index","_timeSlotCollections","_slots","timeSlotRanges","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","slotIdx","startEnd","offsetLeft","scheduler","that","fn","call","_groupedView","_getGroupedView","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","timezone","timezoneOffset","currentGroup","utcCurrentTime","slotElement","remove","_isInDateSlot","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","orientation","toUtcTime","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","attr","preventDefault","create","resourceInfo","_slotByPosition","pageX","pageY","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","location","_editUserEvents","eventElement","target","hasClass","browser","mozilla","scrollLeft","msie","webkit","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","majorTimeHeaderTemplate","eventTemplate","dateHeaderTemplate","footer","command","messages","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","add","slotRanges","rangeStart","rangeEnd","slotStartTime","slotEndTime","_slotRanges","min","max","action","verticalByDate","msMin","msMax","majorTickDivider","isLastMajorSlot","minorTickIndex","timeColumns","text","groupedView","minorTickSlots","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","currentDate","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","visibleEndDate","nextDate","nextDay","previousDate","previousDay","render","eventsByResource","_headerColumnCount","data","Query","field","dir","toArray","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","eventIndex","isArray","_positionEvent","rowsCount","rowHeight","timesRow","row","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","_refreshSlots","minOffset","maxOffset","isMobile","slotsCollection","lastSlot","offsetRight","refresh","itemIdx","value","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","duration","_continuousEvents","showDelete","destroy","resizable","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","dataItem","rowEvents","j","eventLength","addEvent","createRows","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","rangeIndex","clonedEvent","eventDuraton","_removeMoveHint","_moveHint","_updateResizeHint","startRect","format","_removeResizeHint","_createResizeHint","_resizeHint","toString","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","newStart","newEnd","_isInRange","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.timelineview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.timelineview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.timelineview',\n        name: 'Scheduler Timeline View',\n        category: 'web',\n        description: 'The Scheduler Timeline View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, getMilliseconds = kendo.date.getMilliseconds, MS_PER_DAY = kendo.date.MS_PER_DAY, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', SCHEDULER_HEADER_WRAP_CLASS = 'k-scheduler-header-wrap', BORDER_SIZE_COEFF = 0.8666, NS = '.kendoTimelineView';\n        var EVENT_TEMPLATE = kendo.template('<div>' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div></div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.format(\\'{0:m}\\', date)#</span>'), EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail) {#' + '<span class=\"k-icon k-i-arrow-60-left\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-non-recurrence\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-reload\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' + '#}#' + '# if(data.head) {#' + '<span class=\"k-icon k-i-arrow-60-right\"></span>' + '#}#' + '</span>' + '#if(resizable && !data.tail){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !data.head){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n            workDays.push(dayIndex);\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        function setColspan(columnLevel) {\n            var count = 0;\n            if (columnLevel.columns) {\n                for (var i = 0; i < columnLevel.columns.length; i++) {\n                    count += setColspan(columnLevel.columns[i]);\n                }\n                columnLevel.colspan = count;\n                return count;\n            } else {\n                columnLevel.colspan = 1;\n                return 1;\n            }\n        }\n        function collidingEvents(elements, left, right) {\n            var idx, startPosition, overlaps, endPosition;\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                startPosition = elements[idx].rectLeft;\n                endPosition = elements[idx].rectRight;\n                overlaps = startPosition <= left && endPosition >= left;\n                if (overlaps || startPosition >= left && endPosition <= right || left <= startPosition && right >= startPosition) {\n                    if (startPosition < left) {\n                        left = startPosition;\n                    }\n                    if (endPosition > right) {\n                        right = endPosition;\n                    }\n                }\n            }\n            return eventsForSlot(elements, left, right);\n        }\n        function eventsForSlot(elements, left, right) {\n            var events = [];\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = {\n                    rectLeft: elements[idx].rectLeft,\n                    rectRight: elements[idx].rectRight\n                };\n                if (event.rectLeft < left && event.rectRight > left || event.rectLeft >= left && event.rectRight <= right) {\n                    events.push(elements[idx]);\n                }\n            }\n            return events;\n        }\n        var TimelineGroupedView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _getTimeSlotByPosition: function (x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n                return group.timeSlotByPosition(x, y);\n            },\n            _hideHeaders: function () {\n                var view = this._view;\n                view.timesHeader.find('table tr:last').hide();\n                view.datesHeader.find('table tr:last').hide();\n            },\n            _setColspan: function (timeColumn) {\n                setColspan(timeColumn);\n            },\n            _createRowsLayout: function (resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n            },\n            _createVerticalColumnsLayout: function (resources, rows, groupHeaderTemplate, columns) {\n                return columns;\n            },\n            _createColumnsLayout: function (resources, columns, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n            },\n            _getRowCount: function () {\n                var view = this._view;\n                return view._groupCount();\n            },\n            _getGroupsCount: function () {\n                return 1;\n            },\n            _addContent: function (dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n                var view = this._view;\n                var html = '';\n                var options = view.options;\n                var appendRow = function (date) {\n                    var content = '';\n                    var classes = '';\n                    var tmplDate;\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return view._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += 'k-today';\n                    }\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) || !view._isWorkDay(dates[idx])) {\n                        classes += ' k-nonwork-hour';\n                    }\n                    content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                    content += slotTemplate({\n                        date: tmplDate,\n                        resources: resources(isVerticalGrouped ? rowIdx : groupIdx)\n                    });\n                    content += '</td>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        for (var idx = 0, length = columnCount; idx < length; idx++) {\n                            html += view._forTimeRange(start, end, appendRow);\n                        }\n                    }\n                    html += '</tr>';\n                }\n                return html;\n            },\n            _addTimeSlotsCollections: function (groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n                var view = this._view;\n                var rowCount = tableRows.length;\n                if (isVerticallyGrouped) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group = view.groups[groupIndex];\n                    var time;\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    if (!isVerticallyGrouped) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                    var cellsPerDay = cellsPerGroup / datesCount;\n                    for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                        var cellOffset = dateIndex * cellsPerDay + cellsPerGroup * cellMultiplier;\n                        time = getMilliseconds(new Date(+view.startTime()));\n                        for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n                            view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                            time += interval;\n                        }\n                    }\n                }\n            },\n            _getVerticalGroupCount: function (groupsCount) {\n                return groupsCount;\n            },\n            _getVerticalRowCount: function (eventGroups, groupIndex, maxRowCount) {\n                var view = this._view;\n                return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n            },\n            _renderEvent: function (eventGroup, event, adjustedEvent, group, range, container) {\n                var view = this._view;\n                var element;\n                element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n                element.appendTo(container).css({\n                    top: 0,\n                    height: view.options.eventHeight\n                });\n                var eventObject = {\n                    start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                    end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: range,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n                eventGroup.events[event.uid] = eventObject;\n                view.addContinuousEvent(group, range, element, event.isAllDay);\n                view._arrangeRows(eventObject, range, eventGroup);\n            },\n            _verticalCountForLevel: function (level) {\n                var view = this._view;\n                return view._rowCountForLevel(level);\n            },\n            _horizontalCountForLevel: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level);\n            },\n            _updateCurrentVerticalTimeMarker: function (ranges, currentTime) {\n                var view = this._view;\n                var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                var headerWrap = view.datesHeader.find('.' + SCHEDULER_HEADER_WRAP_CLASS);\n                var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                var timesTableMarker = $(elementHtml).prependTo(headerWrap).addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-down');\n                timesTableMarker.css({\n                    left: view._adjustLeftPosition(left - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2),\n                    top: headerWrap.find('tr:last').prev().position().top\n                });\n                $(elementHtml).prependTo(view.content).css({\n                    left: view._adjustLeftPosition(left),\n                    width: '1px',\n                    height: view.content[0].scrollHeight - 1,\n                    top: 0\n                });\n            },\n            _changeGroup: function () {\n                return undefined;\n            },\n            _prevGroupSlot: function (slot, group, isDay) {\n                var view = this._view;\n                if (view._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.last();\n                }\n            },\n            _nextGroupSlot: function (slot, group, isDay) {\n                var view = this._view;\n                if (view._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.first();\n                }\n            },\n            _verticalSlots: function (selection, reverse) {\n                var view = this._view;\n                return view._changeGroup(selection, reverse);\n            },\n            _verticalMethod: function (reverse) {\n                return reverse ? 'leftSlot' : 'rightSlot';\n            },\n            _normalizeVerticalSelection: function () {\n                return undefined;\n            },\n            _horizontalSlots: function (selection, group, method, startSlot, endSlot, multiple, reverse) {\n                var view = this._view;\n                var result = {};\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n                if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                    result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n                }\n                return result;\n            },\n            _changeVerticalViewPeriod: function () {\n                return false;\n            },\n            _changeHorizontalViewPeriod: function (slots, shift, selection, reverse) {\n                var view = this._view;\n                if ((!slots.startSlot || !slots.endSlot) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                    return true;\n                }\n                return false;\n            },\n            _updateDirection: function (selection, ranges, shift, reverse) {\n                var view = this._view;\n                view._updateDirection(selection, ranges, shift, reverse, true);\n            },\n            _createMoveHint: function (range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var hint = view._createEventElement(adjustedEvent.occurrence, adjustedEvent.occurrence, false, false);\n                hint.addClass('k-event-drag-hint');\n                var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                var width = rect.right - rect.left - 2;\n                if (width < 0) {\n                    width = 0;\n                }\n                var left = view._adjustLeftPosition(rect.left);\n                var css = {\n                    left: left,\n                    top: startSlot.offsetTop,\n                    height: startSlot.offsetHeight - 2,\n                    width: width\n                };\n                hint.css(css);\n                view._appendMoveHint(hint);\n            },\n            _adjustLeftPosition: function (left) {\n                var view = this._view;\n                if (view._isRtl) {\n                    left -= view.content[0].scrollWidth - view.content[0].offsetWidth;\n                }\n                return left;\n            }\n        });\n        var TimelineGroupedByDateView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _getTimeSlotByPosition: function (x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n                return group.timeSlotByPosition(x, y, true);\n            },\n            _hideHeaders: function () {\n                var view = this._view;\n                if (!view._isVerticallyGrouped()) {\n                    view.timesHeader.find('table tr').eq(2).hide();\n                    view.datesHeader.find('table tr').eq(2).hide();\n                } else {\n                    view.times.find('.k-last').hide();\n                }\n            },\n            _setColspan: function () {\n            },\n            _createRowsLayout: function (resources, rows, groupHeaderTemplate, columns) {\n                var view = this._view;\n                return view._createDateLayout(columns, null, true);\n            },\n            _createVerticalColumnsLayout: function (resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n            },\n            _createColumnsLayout: function (resources, columns, groupHeaderTemplate, subColumns) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n            },\n            _getRowCount: function (level) {\n                var view = this._view;\n                return view._rowCountForLevel(level);\n            },\n            _getGroupsCount: function () {\n                var view = this._view;\n                return view._groupCount();\n            },\n            _addContent: function (dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n                var view = this._view;\n                var html = '';\n                var options = view.options;\n                var appendRow = function (date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                    var content = '';\n                    var classes = '';\n                    var tmplDate;\n                    var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return view._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += 'k-today';\n                    }\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) || !view._isWorkDay(dates[workDateIndex])) {\n                        classes += ' k-nonwork-hour';\n                    }\n                    content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                    content += slotTemplate({\n                        date: tmplDate,\n                        resources: resources(groupIdx)\n                    });\n                    content += '</td>';\n                    return content;\n                };\n                var tempStart = new Date(start), minorTickCount = view.options.minorTickCount, msMajorInterval = view.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, dateIndex;\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    if (rowIdx % (rowCount / view._dates.length) === 0) {\n                        dateIndex = rowIdx / (rowCount / view._dates.length);\n                        tempStart = new Date(view._dates[dateIndex]);\n                        kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                    }\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n                        html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n                        if (isVerticalGrouped) {\n                            setTime(tempStart, msInterval, false);\n                            break;\n                        }\n                    }\n                    html += '</tr>';\n                }\n                return html;\n            },\n            _addTimeSlotsCollections: function (groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n                var view = this._view;\n                var rowCount = tableRows.length;\n                if (isVerticallyGrouped) {\n                    rowCount = rowCount / datesCount;\n                }\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var rowMultiplier = 0;\n                    var time;\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = dateIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                    var cellsPerDay = cells.length / datesCount;\n                    var cellOffset;\n                    time = getMilliseconds(new Date(+view.startTime()));\n                    for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                        if (!isVerticallyGrouped) {\n                            cellOffset = dateIndex * cellsPerDay + groupCount * cellIndex;\n                            cellMultiplier++;\n                        } else {\n                            cellOffset = 0;\n                            cells = tableRows[cellIndex + cellsPerGroup * dateIndex].children;\n                        }\n                        for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                            var group = view.groups[groupIndex];\n                            view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                        }\n                        time += interval;\n                    }\n                }\n            },\n            _getVerticalGroupCount: function () {\n                var view = this._view;\n                return view.content.find('tr').length;\n            },\n            _getVerticalRowCount: function (eventGroups, groupIndex, maxRowCount) {\n                return maxRowCount;\n            },\n            _renderEvent: function (eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n                var view = this._view;\n                var element;\n                var eventObjects = [];\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                    element.appendTo(container).css({\n                        top: 0,\n                        height: view.options.eventHeight\n                    });\n                    var currentSlot = group._timeSlotCollections[0]._slots[i];\n                    var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n                    var eventObject = {\n                        start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                        end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                        element: element,\n                        uid: event.uid,\n                        slotRange: dateRange,\n                        rowIndex: 0,\n                        offsetTop: 0\n                    };\n                    eventGroup.events[event.uid] = eventObject;\n                    eventObjects.push(eventObject);\n                    view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                    view._arrangeRows(eventObject, dateRange, eventGroup);\n                }\n                eventGroup.events[event.uid] = eventObjects;\n            },\n            _verticalCountForLevel: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level);\n            },\n            _horizontalCountForLevel: function (level, columnLevel) {\n                var view = this._view;\n                return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n            },\n            _updateCurrentVerticalTimeMarker: function (ranges, currentTime) {\n                var view = this._view;\n                var firstTimesCell = view.times.find('tr:first th:first');\n                var lastTimesCell = view.times.find('tr:first th:last');\n                var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                var timesTableMarker = $(elementHtml).prependTo(view.times);\n                var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                var timesTableMarkerCss = {};\n                if (this._isRtl) {\n                    timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                } else {\n                    timesTableMarkerCss.left = lastTimesCell.position().left;\n                    timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                }\n                timesTableMarkerCss.top = markerTopPosition - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2;\n                timesTableMarker.css(timesTableMarkerCss);\n                $(elementHtml).prependTo(view.content).css({\n                    top: markerTopPosition,\n                    height: '1px',\n                    right: '1px',\n                    width: view.content[0].scrollWidth,\n                    left: 0\n                });\n            },\n            _changeGroup: function (selection, previous, slot) {\n                var view = this._view;\n                if (!slot) {\n                    selection.groupIndex = previous ? view.groups.length - 1 : 0;\n                }\n            },\n            _prevGroupSlot: function (slot) {\n                return slot;\n            },\n            _nextGroupSlot: function (slot) {\n                return slot;\n            },\n            _changeDate: function (selection, reverse, slot) {\n                var view = this._view;\n                var group = view.groups[selection.groupIndex];\n                var collections, index;\n                if (reverse) {\n                    collections = group._getCollections(false);\n                    index = slot.index - 1;\n                    if (index >= 0) {\n                        return collections[0]._slots[index];\n                    }\n                } else {\n                    collections = group._getCollections(false);\n                    index = slot.index + 1;\n                    if (collections[0] && collections[0]._slots[index]) {\n                        return collections[0]._slots[index];\n                    }\n                }\n            },\n            _verticalSlots: function (selection, reverse, slot) {\n                return this._changeDate(selection, reverse, slot);\n            },\n            _verticalMethod: function (reverse, multiple) {\n                if (multiple) {\n                    return reverse ? 'upSlot' : 'downSlot';\n                } else {\n                    return reverse ? 'leftSlot' : 'rightSlot';\n                }\n            },\n            _normalizeVerticalSelection: function (selection, ranges, reverse, multiple) {\n                var view = this._view;\n                if (!multiple) {\n                    return view._normalizeVerticalSelection(selection, ranges, reverse);\n                }\n                return undefined;\n            },\n            _horizontalSlots: function (selection, group, method, startSlot, endSlot, multiple, reverse) {\n                var view = this._view;\n                var tempSlot = view._changeGroup(selection, reverse);\n                var result = {};\n                if (!tempSlot) {\n                    if (!view._isVerticallyGrouped()) {\n                        result.startSlot = group[method](startSlot);\n                        result.endSlot = group[method](endSlot);\n                    }\n                } else {\n                    result.startSlot = result.endSlot = tempSlot;\n                }\n                return result;\n            },\n            _changeVerticalViewPeriod: function (slots, shift, selection, reverse) {\n                var view = this._view;\n                if ((!slots.startSlot || !slots.endSlot) && !shift && view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                    return true;\n                }\n                return false;\n            },\n            _changeHorizontalViewPeriod: function (slots, shift, selection, reverse) {\n                var view = this._view;\n                if (view._isVerticallyGrouped()) {\n                    return false;\n                }\n                if ((!slots.startSlot || !slots.endSlot) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                    return true;\n                }\n                return false;\n            },\n            _updateDirection: function (selection, ranges, shift, reverse) {\n                var view = this._view;\n                view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n            },\n            _createMoveHint: function (range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var startEnd = range.end;\n                for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(adjustedEvent.occurrence, adjustedEvent.occurrence, false, false);\n                    hint.addClass('k-event-drag-hint');\n                    var css = {\n                        left: slot.offsetLeft + 2,\n                        top: slot.offsetTop,\n                        height: view.options.eventHeight,\n                        width: slot.offsetWidth\n                    };\n                    hint.css(css);\n                    view._appendMoveHint(hint);\n                }\n            },\n            _adjustLeftPosition: function (left) {\n                var view = this._view;\n                if (view._isRtl && !view._isVerticallyGrouped()) {\n                    left -= view.content[0].scrollWidth - view.content[0].offsetWidth;\n                }\n                return left;\n            }\n        });\n        kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n        kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n        var TimelineView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that._groupedView = that._getGroupedView();\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            name: 'timeline',\n            _getGroupedView: function () {\n                if (this._isGroupedByDate()) {\n                    return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n                } else {\n                    return new kendo.ui.scheduler.TimelineGroupedView(this);\n                }\n            },\n            _getNextEventIndexBySlot: function (slot, sortedEvents, groupIndex) {\n                if (this._isVerticallyGrouped()) {\n                    return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n                }\n                var tempIndex = 0;\n                for (var i = 0; i < sortedEvents.length; i++) {\n                    if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                        tempIndex++;\n                        continue;\n                    }\n                    if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() && groupIndex > sortedEvents[i].start.groupIndex) {\n                        tempIndex++;\n                        continue;\n                    }\n                    break;\n                }\n                return tempIndex;\n            },\n            _getSelectedSlot: function (slot, sortedEvents, event, idx, pad, prev) {\n                if (this._isVerticallyGrouped()) {\n                    return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n                }\n                return slot;\n            },\n            _getSortedEvents: function (uniqueAllEvents) {\n                if (this._isVerticallyGrouped()) {\n                    return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n                }\n                return uniqueAllEvents.sort(function (first, second) {\n                    var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n                    if (result === 0) {\n                        if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                        }\n                        if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                        }\n                    }\n                    if (result === 0) {\n                        result = first.start.groupIndex - second.start.groupIndex;\n                    }\n                    if (result === 0) {\n                        result = $(first.element).index() - $(second.element).index();\n                    }\n                    return result;\n                });\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                this.datesHeader.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.times.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                if (!this._isInDateSlot({\n                        start: currentTime,\n                        end: currentTime\n                    })) {\n                    return;\n                }\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                var groupsCount = !options.group || options.group.orientation == 'vertical' ? 1 : this.groups.length;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        if (this._isVerticallyGrouped()) {\n                            this._groupedView._updateCurrentVerticalTimeMarker(ranges, currentTime);\n                        } else {\n                            var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                            var headerWrap = this.datesHeader.find('.' + SCHEDULER_HEADER_WRAP_CLASS);\n                            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                            var timesTableMarker = $(elementHtml).prependTo(headerWrap).addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-down');\n                            timesTableMarker.css({\n                                left: this._adjustLeftPosition(left - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2),\n                                top: headerWrap.find('tr:last').prev().position().top\n                            });\n                            $(elementHtml).prependTo(this.content).css({\n                                left: this._adjustLeftPosition(left),\n                                width: '1px',\n                                height: this.content[0].scrollHeight - 1,\n                                top: 0\n                            });\n                        }\n                    }\n                }\n            },\n            _adjustLeftPosition: function (left) {\n                return this._groupedView._adjustLeftPosition(left);\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-i-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({\n                                    start: slot.startDate(),\n                                    end: slot.endDate()\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _slotByPosition: function (x, y) {\n                var slot;\n                var content = this.content;\n                var offset = content.offset();\n                var groupIndex;\n                x -= offset.left;\n                y -= offset.top;\n                if (this._isRtl) {\n                    var browser = kendo.support.browser;\n                    if (browser.mozilla) {\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                        x += content[0].scrollLeft;\n                    } else if (browser.msie) {\n                        x -= content.scrollLeft();\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                    } else if (browser.webkit) {\n                        x += content[0].scrollLeft;\n                    }\n                } else {\n                    x += content[0].scrollLeft;\n                }\n                y += content[0].scrollTop;\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            options: {\n                name: 'TimelineView',\n                title: 'Timeline',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                date: kendo.date.today(),\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                showWorkHours: false,\n                minorTickCount: 2,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                majorTick: 60,\n                eventHeight: 25,\n                eventMinWidth: 0,\n                columnWidth: 100,\n                groupHeaderTemplate: '#=text#',\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                slotTemplate: '&nbsp;',\n                eventTemplate: EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                footer: { command: 'workDay' },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                },\n                messages: {\n                    defaultRowText: 'All events',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                that._dates = dates;\n                that._startDate = dates[0];\n                that._endDate = dates[dates.length - 1 || 0];\n                that._calculateSlotRanges();\n                that.createLayout(that._layout(dates));\n                that._content(dates);\n                that._footer();\n                that._setContentWidth();\n                that.refreshLayout();\n                that.datesHeader.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n                    that.trigger('navigate', {\n                        view: 'timeline',\n                        date: slot.startDate()\n                    });\n                });\n                that._groupedView._hideHeaders();\n            },\n            _setContentWidth: function () {\n                var content = this.content;\n                var contentWidth = content.width();\n                var contentTable = this.content.find('table');\n                var columnCount = contentTable.find('tr:first').children().length;\n                var minWidth = 100;\n                var calculatedWidth = columnCount * this.options.columnWidth;\n                if (contentWidth < calculatedWidth) {\n                    minWidth = Math.ceil(calculatedWidth / contentWidth * 100);\n                }\n                contentTable.add(this.datesHeader.find('table')).css('width', minWidth + '%');\n            },\n            _calculateSlotRanges: function () {\n                var dates = this._dates;\n                var slotStartTime = this.startTime();\n                var slotEndTime = this.endTime();\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotEndTime === slotStartTime) {\n                    slotEndTime += MS_PER_DAY - 1;\n                } else if (slotEndTime < slotStartTime) {\n                    slotEndTime += MS_PER_DAY;\n                }\n                var slotRanges = [];\n                for (var i = 0; i < dates.length; i++) {\n                    var rangeStart = getDate(dates[i]);\n                    setTime(rangeStart, slotStartTime);\n                    var rangeEnd = getDate(dates[i]);\n                    setTime(rangeEnd, slotEndTime);\n                    slotRanges.push({\n                        start: kendo.date.toUtcTime(rangeStart),\n                        end: kendo.date.toUtcTime(rangeEnd)\n                    });\n                }\n                this._slotRanges = slotRanges;\n            },\n            _forTimeRange: function (min, max, action, verticalByDate, groupsCount) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = verticalByDate ? 1 : Math.round(length);\n                if (groupsCount) {\n                    length = length * groupsCount;\n                }\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval);\n                    var isMajorTickColumn = majorTickDivider === 0;\n                    var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                    var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                    var minorTickColumns = minorTickCount;\n                    if (length % minorTickCount !== 0) {\n                        var isLastMajorSlot = length - (idx + 1) < minorTickCount;\n                        if (isMajorTickColumn && isLastMajorSlot) {\n                            minorTickColumns = length % minorTickCount;\n                        }\n                    }\n                    html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n                    if (!verticalByDate) {\n                        if (groupsCount) {\n                            if (idx % groupsCount === groupsCount - 1) {\n                                setTime(start, msInterval, false);\n                            }\n                        } else {\n                            setTime(start, msInterval, false);\n                        }\n                    }\n                }\n                return html;\n            },\n            _layout: function (dates) {\n                var timeColumns = [];\n                var columns = [];\n                var that = this;\n                var rows = [{ text: that.options.messages.defaultRowText }];\n                var groupedView = that._groupedView;\n                var minorTickSlots = [];\n                for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                    minorTickSlots.push({\n                        text: '&#8203;',\n                        className: 'k-last',\n                        minorTicks: true\n                    });\n                }\n                this._forTimeRange(that.startTime(), that.endTime(), function (date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                    var template = that.majorTimeHeaderTemplate;\n                    if (majorTick) {\n                        var timeColumn = {\n                            text: template({ date: date }),\n                            className: lastSlotColumn ? 'k-slot-cell' : '',\n                            columns: minorTickSlots.slice(0, minorSlotsCount)\n                        };\n                        groupedView._setColspan(timeColumn);\n                        timeColumns.push(timeColumn);\n                    }\n                });\n                for (var idx = 0; idx < dates.length; idx++) {\n                    columns.push({\n                        text: that.dateHeaderTemplate({ date: dates[idx] }),\n                        className: 'k-slot-cell',\n                        columns: timeColumns.slice(0)\n                    });\n                }\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                        columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n                    } else {\n                        columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _content: function (dates) {\n                var that = this;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGrouped = false;\n                if (resources.length) {\n                    isVerticalGrouped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGrouped) {\n                        rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                        groupsCount = that._groupedView._getGroupsCount();\n                    } else {\n                        groupsCount = that._groupCount();\n                    }\n                }\n                html += '<tbody>';\n                html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var dates = this._dates;\n                var columnCount = dates.length;\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    var start = dates[0];\n                    var end = dates[dates.length - 1 || 0];\n                    var startTime = getMilliseconds(this.startTime());\n                    var endTime = getMilliseconds(this.endTime());\n                    if (startTime !== 0 && endTime <= startTime) {\n                        start = getDate(start);\n                        setTime(start, startTime);\n                        end = getDate(end);\n                        setTime(end, endTime);\n                    }\n                    view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n            },\n            _isHorizontallyGrouped: function () {\n                return this.groupedResources.length && this._groupOrientation() === 'horizontal';\n            },\n            _timeSlotGroups: function (groupCount, datesCount) {\n                var interval = this._timeSlotInterval();\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var tableRows = this.content.find('tr');\n                tableRows.attr('role', 'row');\n                this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n            },\n            _addTimeSlotToCollection: function (group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n                var cell = cells[cellIndex + cellOffset];\n                var collection = group.getTimeSlotCollection(0);\n                var currentDate = this._dates[dateIndex];\n                var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                var start = currentTime + time;\n                var end = start + interval;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addTimeSlot(cell, start, end, true);\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            visibleEndDate: function () {\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var endDate = this.endDate();\n                if (startTime !== 0 && endTime <= startTime) {\n                    endDate = kendo.date.addDays(endDate, 1);\n                }\n                return endDate;\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventGroups = [];\n                var maxRowCount = 0;\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    var eventGroup = {\n                        groupIndex: groupIndex,\n                        maxRowCount: 0,\n                        events: {}\n                    };\n                    eventGroups.push(eventGroup);\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n                    if (maxRowCount < eventGroup.maxRowCount) {\n                        maxRowCount = eventGroup.maxRowCount;\n                    }\n                }\n                this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n                this._positionEvents(eventGroups, eventsByResource.length);\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _positionEvents: function (eventGroups, groupsCount) {\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var eventsForGroup = eventGroups[groupIndex].events;\n                    for (var eventUid in eventsForGroup) {\n                        var eventObject = eventsForGroup[eventUid];\n                        if ($.isArray(eventObject)) {\n                            for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                                this._positionEvent(eventObject[eventIndex]);\n                            }\n                        } else {\n                            this._positionEvent(eventObject);\n                        }\n                    }\n                }\n            },\n            _setRowsHeight: function (eventGroups, groupsCount, maxRowCount) {\n                var eventHeight = this.options.eventHeight + 2;\n                var eventBottomOffset = this._getBottomRowOffset();\n                var groupedView = this._groupedView;\n                var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n                groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n                    rowsCount = rowsCount ? rowsCount : 1;\n                    var rowHeight = (eventHeight + 2) * rowsCount + eventBottomOffset;\n                    var timesRow = $(this.times.find('tr')[groupIndex]);\n                    var row = $(this.content.find('tr')[groupIndex]);\n                    timesRow.height(rowHeight);\n                    row.height(rowHeight);\n                }\n                this._setContentWidth();\n                this.refreshLayout();\n                this._refreshSlots();\n            },\n            _getBottomRowOffset: function () {\n                var eventBottomOffset = this.options.eventHeight * 0.5;\n                var isMobile = this._isMobile();\n                var minOffset;\n                var maxOffset;\n                if (isMobile) {\n                    minOffset = 30;\n                    maxOffset = 60;\n                } else {\n                    minOffset = 15;\n                    maxOffset = 30;\n                }\n                if (eventBottomOffset > maxOffset) {\n                    eventBottomOffset = maxOffset;\n                } else if (eventBottomOffset < minOffset) {\n                    eventBottomOffset = minOffset;\n                }\n                return eventBottomOffset;\n            },\n            _positionEvent: function (eventObject) {\n                var eventHeight = this.options.eventHeight + 2;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var left = this._adjustLeftPosition(rect.left);\n                var width = rect.right - rect.left - 2;\n                if (width < 0) {\n                    width = 0;\n                }\n                if (width < this.options.eventMinWidth) {\n                    var slotsCollection = eventObject.slotRange.collection;\n                    var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                    var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n                    width = this.options.eventMinWidth;\n                    if (offsetRight < left + width) {\n                        width = offsetRight - rect.left - 2;\n                    }\n                }\n                eventObject.element.css({\n                    top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + 2) + 'px',\n                    left: left,\n                    width: width\n                });\n            },\n            _refreshSlots: function () {\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    this.groups[groupIndex].refresh();\n                }\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _isInDateSlot: function (event) {\n                var startTime = event.start;\n                var endTime = event.end;\n                var rangeStart = getDate(this._startDate);\n                var rangeEnd = kendo.date.addDays(getDate(this.visibleEndDate()), 1);\n                if (startTime < rangeEnd && rangeStart <= endTime) {\n                    return true;\n                }\n                return false;\n            },\n            _isInTimeSlot: function (event) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n                var slotRanges = this._slotRanges;\n                if (startTime === endTime) {\n                    endTime = endTime + 1;\n                }\n                for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                    if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _adjustEvent: function (event) {\n                var start = event.start;\n                var end = event.end;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var adjustedStartDate = null;\n                var adjustedEndDate = null;\n                var occurrence;\n                var head = false;\n                var tail = false;\n                if (event.isAllDay) {\n                    start = getDate(start);\n                    eventStartTime = 0;\n                    end = getDate(end);\n                    eventEndTime = MS_PER_DAY;\n                    adjustedEndDate = kendo.date.addDays(end, 1);\n                }\n                if (endTime === 0) {\n                    endTime = MS_PER_DAY;\n                }\n                if (endTime <= startTime) {\n                    if (eventStartTime < startTime && eventStartTime >= endTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    if (eventEndTime > endTime && eventEndTime <= startTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                } else {\n                    if (startTime > eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    } else if (endTime <= eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    if (endTime < eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    } else if (startTime > eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, -1);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                }\n                occurrence = event.clone({\n                    start: adjustedStartDate ? adjustedStartDate : start,\n                    end: adjustedEndDate ? adjustedEndDate : end,\n                    _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                    _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                    isAllDay: false\n                });\n                return {\n                    occurrence: occurrence,\n                    head: head,\n                    tail: tail\n                };\n            },\n            _renderEvents: function (events, groupIndex, eventGroup) {\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        var container = this.content;\n                        if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                            var adjustedEvent = this._adjustEvent(event);\n                            var group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                                var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                                var range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n                                this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                            }\n                        }\n                    }\n                }\n            },\n            addContinuousEvent: function (group, range, element, isAllDay) {\n                var events = group._continuousEvents;\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            },\n            _createEventElement: function (occurrence, event, head, tail) {\n                var template = this.eventTemplate;\n                var editable = this.options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false,\n                    messages: this.options.messages\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _arrangeRows: function (eventObject, slotRange, eventGroup) {\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var rectRight = rect.right + this.options.eventMinWidth;\n                var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    rectLeft: rect.left,\n                    rectRight: rectRight,\n                    element: eventObject.element,\n                    uid: eventObject.uid\n                });\n                events.push({\n                    start: startIndex,\n                    end: endIndex,\n                    uid: eventObject.uid\n                });\n                var rows = SchedulerView.createRows(events);\n                if (eventGroup.maxRowCount < rows.length) {\n                    eventGroup.maxRowCount = rows.length;\n                }\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                    }\n                }\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var groupedView = this._groupedView;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        return groupedView._verticalCountForLevel(resources.length - 1);\n                    } else {\n                        return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                    }\n                }\n                return 1;\n            },\n            _updateEventForSelection: function (event) {\n                var adjustedEvent = this._adjustEvent(event.clone());\n                return adjustedEvent.occurrence;\n            },\n            _eventOptionsForMove: function (event) {\n                if (event.isAllDay) {\n                    return { isAllDay: false };\n                }\n                return {};\n            },\n            _updateEventForResize: function (event) {\n                if (event.isAllDay) {\n                    event.set('isAllDay', false);\n                }\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var group = this.groups[groupIndex];\n                var clonedEvent = event.clone({\n                    start: event.start,\n                    end: event.end\n                });\n                var eventDuraton = clonedEvent.duration();\n                clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n                clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n                this._removeMoveHint(event.uid);\n                if (this._isInDateSlot(clonedEvent)) {\n                    if (clonedEvent.isAllDay || clonedEvent.duration() >= MS_PER_DAY || this._isInTimeSlot(clonedEvent)) {\n                        var adjustedEvent = this._adjustEvent(clonedEvent);\n                        var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                        for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                            this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                        }\n                    }\n                }\n            },\n            _appendMoveHint: function (hint) {\n                hint.appendTo(this.content);\n                this._moveHint = this._moveHint.add(hint);\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, false, false);\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    var startRect = range.innerRect(startTime, endTime, false);\n                    startRect.top = start.offsetTop;\n                    var width = startRect.right - startRect.left;\n                    var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n                    var left = this._adjustLeftPosition(startRect.left);\n                    var hint = SchedulerView.fn._createResizeHint.call(this, left, startRect.top, width, height);\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n                var format = 't';\n                var container = this.content;\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple && !vertical) {\n                    if (startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n            _changeGroup: function (selection, previous) {\n                var method = previous ? 'prevGroupSlot' : 'nextGroupSlot';\n                var slot = this[method](selection.start, selection.groupIndex, false);\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n                this._groupedView._changeGroup(selection, previous, slot);\n                return slot;\n            },\n            prevGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex <= 0) {\n                    return;\n                }\n                return this._groupedView._prevGroupSlot(slot, group, isDay);\n            },\n            nextGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n                return this._groupedView._nextGroupSlot(slot, group, isDay);\n            },\n            _verticalSlots: function (selection, ranges, multiple, reverse) {\n                var groupedView = this._groupedView;\n                var method = groupedView._verticalMethod(reverse, multiple);\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n                if (slot) {\n                    startSlot = endSlot = slot;\n                }\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n                if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n                }\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n            _horizontalSlots: function (selection, ranges, multiple, reverse) {\n                var method = reverse ? 'upSlot' : 'downSlot';\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                var result = {};\n                if (!multiple) {\n                    result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n                } else {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n                    if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                        result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                    }\n                }\n                return result;\n            },\n            _changeViewPeriod: function (selection, reverse) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                var newStart, newEnd;\n                newStart = new Date(date);\n                newEnd = new Date(date);\n                if (this._isInRange(newStart, newEnd)) {\n                    return false;\n                }\n                selection.start = newStart;\n                selection.end = newEnd;\n                if (this._isHorizontallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n                var duration = end - start;\n                if (reverse) {\n                    end = getMilliseconds(this.endTime());\n                    end = end === 0 ? MS_PER_DAY : end;\n                    setTime(selection.start, end - duration);\n                    setTime(selection.end, end);\n                } else {\n                    start = getMilliseconds(this.startTime());\n                    setTime(selection.start, start);\n                    setTime(selection.end, start + duration);\n                }\n                selection.events = [];\n                return true;\n            },\n            move: function (selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var keys = kendo.keys;\n                var groupedView = this._groupedView;\n                var ranges = group.ranges(selection.start, selection.end, false, false);\n                var startSlot, endSlot, reverse, slots;\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n                    groupedView._updateDirection(selection, ranges, shift, reverse);\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n                    if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                        return handled;\n                    }\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n                    if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                        return handled;\n                    }\n                }\n                if (handled) {\n                    startSlot = slots.startSlot;\n                    endSlot = slots.endSlot;\n                    if (shift) {\n                        var backward = selection.backward;\n                        if (backward && startSlot) {\n                            selection.start = startSlot.startDate();\n                        } else if (!backward && endSlot) {\n                            selection.end = endSlot.endDate();\n                        }\n                    } else if (startSlot && endSlot) {\n                        selection.start = startSlot.startDate();\n                        selection.end = endSlot.endDate();\n                    }\n                    selection.events = [];\n                }\n                return handled;\n            },\n            destroy: function () {\n                var that = this;\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            }\n        });\n        extend(true, ui, {\n            TimelineView: TimelineView,\n            TimelineWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWeekView',\n                    title: 'Timeline Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWeek',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineWorkWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWorkWeekView',\n                    title: 'Timeline Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWorkWeek',\n                nextDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.options.workWeekStart, -1), end = kendo.date.dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineMonthView: TimelineView.extend({\n                options: {\n                    name: 'TimelineMonthView',\n                    title: 'Timeline Month',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                    workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                    footer: false,\n                    majorTick: 1440,\n                    minorTickCount: 1\n                },\n                name: 'timelineMonth',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.firstDayOfMonth(selectedDate), end = kendo.date.lastDayOfMonth(selectedDate), idx, length, dates = [];\n                    for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}