{"version":3,"sources":["kendo.scheduler.dayview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","idx","events","_continuousEvents","lastEvent","length","startDate","getDate","start","getTime","splice","uid","attr","kendo","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","window","ui","browser","support","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","proxy","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","BORDER_SIZE_COEFF","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","MultiDayView","init","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","timezone","timezoneOffset","groupsCount","firstTimesCell","lastTimesCell","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","elementHtml","timesTableMarker","markerTopPosition","timesTableMarkerCss","markerWidth","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","times","find","remove","content","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","prependTo","round","innerRect","top","scrollWidth","msie","edge","_isRtl","right","position","left","addClass","css","height","width","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","_updateResizeHint","event","startTime","endTime","hint","rangeIndex","slotIdx","slot","rect","format","container","multiday","isMultiDay","_removeResizeHint","startSlot","_isGroupedByDate","index","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","outerRect","snap","bottom","appendTo","text","first","toString","toLocalDate","last","_updateMoveHint","distance","eventHint","duration","_removeMoveHint","pop","clientWidth","offsetHeight","_createEventElement","clone","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","rowCount","rowMultiplier","cellMultiplier","cells","timeIndex","interval","_timeSlotInterval","verticalViews","tableRows","floor","children","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","columnIndex","_addResourceView","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","resourceInfo","parent","hasClass","pageX","pageY","_resourceBySlot","eventInfo","endDate","update","threshold","mobileOS","android","_addUserEvents","UserEvents","filter","tap","target","location","_allDayUserEvents","_editUserEvents","eventElement","_layout","dates","column","columns","rows","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","_footer","html","isWorkDay","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","allDayVerticalGroupRow","appendRow","rowIdx","isVerticalGroupped","dateID","rowLevels","columnLevels","result","dateGroupIndex","dateIndex","groupIdx","_addCellsToContent","append","tmplDate","classes","_isWorkDay","i","day","getDay","_render","allDayHeader","_startDate","_endDate","createLayout","refreshLayout","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","_end","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slotStart","slotEnd","slots","_positionAllDayEvent","slotRange","rowEvents","j","eventLength","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","columnWidth","createColumns","style","_positionEvent","_startTime","_endTime","isOneDayEvent","head","tail","middle","eventStartDate","eventEndDate","data","isMobile","showDelete","resizable","resize","_time","eventEndTime","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","allDaySlots","_height","refresh","_renderEvents","isMultiDayEvent","rangeCount","occurrence","newStart","newEnd","dateRange","allDayEventContainer","slotRanges","daySlotRanges","setDate","render","eventsByResource","eventsPerDate","Query","sort","field","dir","toArray","_eventsByResource","map","grep","itemIdx","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","verticalByDate","endMilliseconds","newDateStart","newDateEnd","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.dayview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.dayview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.dayview',\n        name: 'Scheduler Day View',\n        category: 'web',\n        description: 'The Scheduler Day View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, browser = kendo.support.browser, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, MS_PER_DAY = kendo.date.MS_PER_DAY, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', BORDER_SIZE_COEFF = 0.8666, getMilliseconds = kendo.date.getMilliseconds, NS = '.kendoMultiDayView';\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.toString(date, \\'ddd M/dd\\')#</span>'), ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-left\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-non-recurrence\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-reload\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' + '#}#' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-right\"></span>' + '#}#' + '</span>' + '#if(resizable && !singleDay && !data.tail && !data.middle){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !singleDay && !data.head && !data.middle){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\" ' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-non-recurrence\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-reload\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' + '#}#' + '</span>' + '<span class=\"k-event-top-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-up\"></span>' + '# } #' + '</span>' + '<span class=\"k-event-bottom-actions\">' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-down\"></span>' + '# } #' + '</span>' + '# if(resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-n\"></span>' + '# } #' + '# if(resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-s\"></span>' + '# } #' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n            if (isAllDay && lastEvent && getDate(lastEvent.start.startDate()).getTime() == startDate) {\n                var idx = events.length - 1;\n                for (; idx > -1; idx--) {\n                    if (events[idx].isAllDay || getDate(events[idx].start.startDate()).getTime() < startDate) {\n                        break;\n                    }\n                }\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n            workDays.push(dayIndex);\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        var MultiDayView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                this.times.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                var groupsCount = !options.group || options.group.orientation == 'horizontal' ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find('tr:first th:first');\n                var lastTimesCell = this.times.find('tr:first th:last');\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                        var timesTableMarker = $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                        var timesTableMarkerCss = {};\n                        var markerWidth = this.content[0].scrollWidth;\n                        if (browser.msie || browser.edge) {\n                            markerWidth -= 1;\n                        }\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                        } else {\n                            timesTableMarkerCss.left = lastTimesCell.position().left;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                        }\n                        timesTableMarkerCss.top = markerTopPosition - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2;\n                        timesTableMarker.css(timesTableMarkerCss);\n                        $(elementHtml).prependTo(this.content).css({\n                            top: markerTopPosition,\n                            height: '1px',\n                            right: 0,\n                            width: markerWidth,\n                            left: 0\n                        });\n                    }\n                }\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n                            hint = SchedulerView.fn._createResizeHint.call(this, slot.offsetLeft, top, width, height);\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n                        hint = SchedulerView.fn._createResizeHint.call(this, start.offsetLeft, top, width, height);\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n                var format = 't';\n                var container = this.content;\n                if (multiday) {\n                    format = 'M/dd';\n                    container = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n                start = kendo.timezone.toLocalDate(start);\n                end = kendo.timezone.toLocalDate(end);\n                this._removeMoveHint(event.uid);\n                if (!multiday && (getMilliseconds(end) === 0 || getMilliseconds(end) < getMilliseconds(this.startTime()))) {\n                    if (ranges.length > 1) {\n                        ranges.pop();\n                    }\n                }\n                var eventHint = $();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 4;\n                            hint = this._createEventElement(event.clone({\n                                start: start,\n                                end: end\n                            }), !multiday);\n                            this._appendMoveHint(hint, css);\n                            eventHint = eventHint.add(hint);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                            css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n                        if (multiday) {\n                            css.width = range.innerWidth() - 4;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 4;\n                        }\n                        hint = this._createEventElement(event.clone({\n                            start: start,\n                            end: end\n                        }), !multiday);\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                }\n                var content = this.content;\n                if (multiday) {\n                    content = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n                eventHint.appendTo(content);\n            },\n            _appendMoveHint: function (hint, css) {\n                hint.addClass('k-event-drag-hint');\n                hint.css(css);\n                this._moveHint = this._moveHint.add(hint);\n            },\n            _slotByPosition: function (x, y) {\n                var slot, offset;\n                if (this._isVerticallyGrouped()) {\n                    offset = this.content.offset();\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                } else {\n                    offset = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day)').find('>div').offset();\n                }\n                if (offset) {\n                    x -= offset.left;\n                    y -= offset.top;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                var group;\n                var groupIndex;\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                if (offset) {\n                    x += offset.left;\n                    y += offset.top;\n                }\n                offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                if (!this._isVerticallyGrouped()) {\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                            return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n            _columnCountInResourceView: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        return this._rowCountForLevel(0);\n                    } else {\n                        return this._columnCountForLevel(0);\n                    }\n                }\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n            _timeSlotGroups: function (groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find('tr:not(.k-scheduler-header-all-day)');\n                var group, time, rowIndex, cellIndex;\n                tableRows.attr('role', 'row');\n                var rowCount = tableRows.length;\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n                    rowIndex = rowMultiplier * rowCount;\n                    while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                        time += interval;\n                        rowIndex++;\n                    }\n                }\n            },\n            _addTimeSlotGroup: function (group, cells, cellIndex, time, interval, timeIndex) {\n                var cell = cells[cellIndex];\n                var collection = group.getTimeSlotCollection(timeIndex);\n                var currentDate = this._dates[timeIndex];\n                if (!currentDate) {\n                    return;\n                }\n                var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                var start = currentTime + time;\n                var end = start + interval;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addTimeSlot(cell, start, end);\n            },\n            _addDaySlotGroup: function (collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                if (!start) {\n                    return;\n                }\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n            _daySlotGroups: function (groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find('.k-scheduler-header-all-day');\n                } else {\n                    tableRows = this.element.find('.k-scheduler-header-all-day tr');\n                }\n                tableRows.attr('role', 'row');\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        if (this._dates[columnIndex]) {\n                            view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                        }\n                    }\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n            options: {\n                name: 'MultiDayView',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                allDaySlot: true,\n                showWorkHours: false,\n                title: '',\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                minorTimeHeaderTemplate: '&\\\\#8203;',\n                groupHeaderTemplate: '#=text#',\n                slotTemplate: '&nbsp;',\n                allDaySlotTemplate: '&nbsp;',\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: { command: 'workDay' },\n                messages: {\n                    allDay: 'all day',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-i-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        if (!$(this).parent().hasClass('k-scheduler-header-all-day')) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    }).on('dblclick' + NS, '.k-scheduler-header-all-day td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({}, {\n                                    isAllDay: true,\n                                    start: kendo.date.getDate(slot.startDate()),\n                                    end: kendo.date.getDate(slot.startDate())\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            if (!$(e.target).parent().hasClass('k-scheduler-header-all-day')) {\n                                var x = e.x.location !== undefined ? e.x.location : e.x;\n                                var y = e.y.location !== undefined ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger('add', {\n                                        eventInfo: extend({\n                                            start: slot.startDate(),\n                                            end: slot.endDate()\n                                        }, resourceInfo)\n                                    });\n                                }\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-header-all-day td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({}, {\n                                        isAllDay: true,\n                                        start: kendo.date.getDate(slot.startDate()),\n                                        end: kendo.date.getDate(slot.startDate())\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _layout: function (dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n                    column.text = that.dateHeaderTemplate({ date: dates[idx] });\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = 'k-today';\n                    }\n                    columns.push(column);\n                }\n                var resources = this.groupedResources;\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay,\n                        allDay: true,\n                        cellContent: function (idx) {\n                            var groupIndex = idx;\n                            idx = resources.length && that._groupOrientation() !== 'vertical' ? idx % dates.length : idx;\n                            return that.allDaySlotTemplate({\n                                date: dates[idx],\n                                resources: function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n                this._forTimeRange(this.startTime(), this.endTime(), function (date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? 'k-slot-cell' : ''\n                    };\n                    rows.push(row);\n                });\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                        if (byDate) {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                        } else {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                        }\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: options.date,\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval), isMajorTickRow = majorTickDivider === 0, isMiddleRow = majorTickDivider < minorTickCount - 1, isLastSlotRow = majorTickDivider === minorTickCount - 1;\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var allDaySlotTemplate = this.allDaySlotTemplate;\n                var isVerticalGroupped = false;\n                var allDayVerticalGroupRow;\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                if (resources.length) {\n                    isVerticalGroupped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGroupped) {\n                        rowCount = this._rowCountForLevel(this.rowLevels.length - 2);\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1);\n                        }\n                        if (options.allDaySlot) {\n                            allDayVerticalGroupRow = function (groupIndex) {\n                                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                                var dateGroupIndex = byDate ? 0 : groupIndex;\n                                var resources = function () {\n                                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                                };\n                                if (byDate) {\n                                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[dateID],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                } else {\n                                    for (var idx = 0; idx < dates.length; idx++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[idx],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                }\n                                return result + '</tr>';\n                            };\n                        }\n                    } else {\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1) / this._columnCountForLevel(0);\n                        } else {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 2);\n                        }\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date, majorTick, middleRow) {\n                    var content = '';\n                    var groupIdx = 0;\n                    var idx, length;\n                    content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : '') + '>';\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n                            }\n                            if (isVerticalGroupped) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                        }\n                    }\n                    content += '</tr>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += allDayVerticalGroupRow ? allDayVerticalGroupRow(rowIdx) : '';\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                        dateID++;\n                    }\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _addCellsToContent: function (content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = '';\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === 'vertical';\n                var resources = function (groupIndex) {\n                    return function () {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += 'k-today';\n                }\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) || !this._isWorkDay(dates[idx])) {\n                    classes += ' k-nonwork-hour';\n                }\n                content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                content += slotTemplate({\n                    date: tmplDate,\n                    resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx)\n                });\n                content += '</td>';\n                return content;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                this._dates = dates;\n                this._startDate = dates[0];\n                this._endDate = dates[dates.length - 1 || 0];\n                this.createLayout(this._layout(dates));\n                this._content(dates);\n                this._footer();\n                this.refreshLayout();\n                var allDayHeader = this.element.find('.k-scheduler-header-all-day td');\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n                that.element.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _end: function (isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n                if (isAllDay) {\n                    time = 0;\n                }\n                return new Date(this._endDate.getTime() + time);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            destroy: function () {\n                var that = this;\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n            inRange: function (options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n                if (options.isAllDay) {\n                    return inRange;\n                }\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n                return inRange && startTime <= start && end <= endTime;\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            _timeSlotIndex: function (date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n                return (eventStartTime - startTime) / timeSlotInterval;\n            },\n            _slotIndex: function (date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n                return this._timeSlotIndex(date);\n            },\n            _dateSlotIndex: function (date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n            _positionAllDayEvent: function (element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var currentColumnCount = this._headerColumnCount || 0;\n                var leftOffset = 2;\n                var rightOffset = startIndex !== endIndex ? 5 : 4;\n                var eventHeight = this._allDayHeaderHeight;\n                var start = slotRange.startSlot();\n                element.css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                allDayEvents.push({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                var rows = SchedulerView.createRows(allDayEvents);\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n                var top = slotRange.start.offsetTop;\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({ top: top + idx * eventHeight });\n                    }\n                }\n            },\n            _arrangeColumns: function (element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n                element = {\n                    element: element,\n                    slotIndex: startSlot.index,\n                    start: top,\n                    end: top + height\n                };\n                var columns, slotWidth = startSlot.clientWidth, eventRightOffset = slotWidth * 0.1, columnEvents, eventElements = slotRange.events(), slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end);\n                slotRange.addEvent(element);\n                slotEvents.push(element);\n                columns = SchedulerView.createColumns(slotEvents);\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        columnEvents[j].element[0].style.width = columnWidth - 4 + 'px';\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + 'px';\n                    }\n                }\n            },\n            _positionEvent: function (event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var rect = slotRange.innerRect(start, end, false);\n                var height = rect.bottom - rect.top - 2;\n                if (height < 0) {\n                    height = 0;\n                }\n                element.css({\n                    top: rect.top,\n                    height: height\n                });\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n            },\n            _createEventElement: function (event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var middle;\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if (!isInDateRange(getDate(eventStartDate), startDate, endDate) && !isInDateRange(eventEndDate, startDate, endDate) || isOneDayEvent && eventStartTime < startTime && eventEndTime > endTime) {\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate || isOneDayEvent && eventStartTime < startTime) {\n                    tail = true;\n                } else if (eventEndDate > endDate && !isOneDayEvent || isOneDayEvent && eventEndTime > endTime) {\n                    head = true;\n                }\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false,\n                    messages: options.messages\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _isInTimeSlot: function (event) {\n                var slotStartTime = this.startTime(), slotEndTime = this.endTime(), startTime = event._startTime || event.start, endTime = event._endTime || event.end;\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                if (event._date('end') > event._date('start')) {\n                    endTime = +event._date('end') + (MS_PER_DAY - 1);\n                }\n                endTime = event._endTime ? endTime - event._date('end') : getMilliseconds(new Date(endTime));\n                startTime = event._startTime ? startTime - event._date('start') : getMilliseconds(new Date(startTime));\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n                var overlaps = startTime !== slotEndTime;\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(slotStartTime, startTime, endTime) || isInTimeRange(slotEndTime, startTime, endTime);\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _updateAllDayHeaderHeight: function (height) {\n                if (this._height !== height) {\n                    this._height = height;\n                    var allDaySlots = this.element.find('.k-scheduler-header-all-day td');\n                    if (allDaySlots.length) {\n                        allDaySlots.parent().add(this.element.find('.k-scheduler-times-all-day').parent()).height(height);\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n            _renderEvents: function (events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find('.k-scheduler-header-wrap > div');\n                var byDate = this._isGroupedByDate();\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        var container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n                        var element, ranges, range, start, end, group;\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n                                ranges = group.slotRanges(event);\n                                var rangeCount = ranges.length;\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n                                    var occurrence = event.clone({\n                                        start: start,\n                                        end: end,\n                                        _startTime: event._startTime,\n                                        _endTime: event.endTime\n                                    });\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n                                        element.appendTo(container);\n                                        this._positionEvent(occurrence, element, range);\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            ranges = group.slotRanges(event);\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = new Date(start);\n                                    var newEnd = new Date(start);\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newEnd.setDate(newEnd.getDate() + 1);\n                                        newStart.setDate(newStart.getDate() + 1);\n                                        this._positionAllDayEvent(element, dateRange);\n                                        addContinuousEvent(group, dateRange, element, true);\n                                        element.appendTo(container);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n                                    this._positionAllDayEvent(element, ranges[0]);\n                                    addContinuousEvent(group, ranges[0], element, true);\n                                    element.appendTo(container);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventsPerDate = $.map(this._dates, function (date) {\n                    return Math.max.apply(null, $.map(eventsByResource, function (events) {\n                        return $.grep(events, function (event) {\n                            return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                        }).length;\n                    }));\n                });\n                var height = Math.max.apply(null, eventsPerDate);\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n                this.refreshLayout();\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            clearSelection: function () {\n                this.content.add(this.datesHeader).find('.k-state-selected').removeAttr('id').attr('aria-selected', false).removeClass('k-state-selected');\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot && startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    } else {\n                        if (isDaySlot && startSlot.index === endSlot.index || !isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = !reverse && !group.daySlotCollectionCount() ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    var newDateStart, newDateEnd;\n                    newDateStart = new Date(date);\n                    newDateEnd = new Date(date);\n                    if (this._isInRange(newDateStart, newDateEnd)) {\n                        return false;\n                    }\n                    selection.start = newDateStart;\n                    selection.end = newDateEnd;\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                    } else {\n                        endMilliseconds = selection.isAllDay || !getMilliseconds(end) ? MS_PER_DAY : getMilliseconds(end);\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n                    selection.events = [];\n                    return true;\n                }\n            }\n        });\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: 'DayView',\n                    title: 'Day'\n                },\n                name: 'day'\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: 'WeekView',\n                    title: 'Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'week',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: 'WorkWeekView',\n                    title: 'Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'workWeek',\n                nextDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, dayOfWeek = kendo.date.dayOfWeek, weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), start = dayOfWeek(weekStart, this.options.workWeekStart, 1), end = dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}